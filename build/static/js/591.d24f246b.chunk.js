"use strict";(self.webpackChunkivuriro_new=self.webpackChunkivuriro_new||[]).push([[591],{6591:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var o=t(5043),i=t(4755),u=t(4584);class a extends u.V{constructor(e){let{attributes:n={}}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Object.assign(n,{position:{size:2,data:new Float32Array([-1,-1,3,-1,-1,3])},uv:{size:2,data:new Float32Array([0,0,2,0,0,2])}}),super(e,n)}}var r=t(5150),s=t(4817),l=t(579);const v=e=>{let{baseColor:n=[1,.97,.9],speed:t=.4,amplitude:u=.5,frequencyX:v=3,frequencyY:c=2,interactive:f=!0,...m}=e;const d=(0,o.useRef)(null);return(0,o.useEffect)(()=>{if(!d.current)return;const e=d.current,o=new i.A({antialias:!0}),l=o.gl;l.clearColor(...n,1);const m=new a(l),h=new r.B(l,{vertex:"\n      attribute vec2 position;\n      attribute vec2 uv;\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0.0, 1.0);\n      }\n    ",fragment:"\n      precision highp float;\n      uniform float uTime;\n      uniform vec3 uResolution;\n      uniform vec3 uBaseColor;\n      uniform float uAmplitude;\n      uniform float uFrequencyX;\n      uniform float uFrequencyY;\n      uniform vec2 uMouse;\n      varying vec2 vUv;\n\n      vec4 renderImage(vec2 uvCoord) {\n          vec2 fragCoord = uvCoord * uResolution.xy;\n          vec2 uv = (2.0 * fragCoord - uResolution.xy) / min(uResolution.x, uResolution.y);\n\n          for (float i = 1.0; i < 10.0; i++){\n              uv.x += uAmplitude / i * cos(i * uFrequencyX * uv.y + uTime + uMouse.x * 3.14159);\n              uv.y += uAmplitude / i * cos(i * uFrequencyY * uv.x + uTime + uMouse.y * 3.14159);\n          }\n\n          vec2 diff = (uvCoord - uMouse);\n          float dist = length(diff);\n          float falloff = exp(-dist * 20.0);\n          float ripple = sin(10.0 * dist - uTime * 2.0) * 0.03;\n          uv += (diff / (dist + 0.0001)) * ripple * falloff;\n\n          float sineValue = abs(sin(uTime - uv.y - uv.x));\n          vec3 color = mix(vec3(0.9, 0.8, 0.7), vec3(1.0, 0.97, 0.9), sineValue);\n\n          return vec4(color, 1.0);\n      }\n\n      void main() {\n          vec4 col = vec4(0.0);\n          int samples = 0;\n          for (int i = -1; i <= 1; i++){\n              for (int j = -1; j <= 1; j++){\n                  vec2 offset = vec2(float(i), float(j)) * (1.0 / min(uResolution.x, uResolution.y));\n                  col += renderImage(vUv + offset);\n                  samples++;\n              }\n          }\n          gl_FragColor = col / float(samples);\n      }\n    ",uniforms:{uTime:{value:0},uResolution:{value:new Float32Array([l.canvas.width,l.canvas.height,l.canvas.width/l.canvas.height])},uBaseColor:{value:new Float32Array(n)},uAmplitude:{value:u},uFrequencyX:{value:v},uFrequencyY:{value:c},uMouse:{value:new Float32Array([0,0])}}}),g=new s.e(l,{geometry:m,program:h});function p(){o.setSize(e.clientWidth,e.clientHeight);const n=h.uniforms.uResolution.value;n[0]=l.canvas.width,n[1]=l.canvas.height,n[2]=l.canvas.width/l.canvas.height}function w(n){const t=e.getBoundingClientRect(),o=(n.clientX-t.left)/t.width,i=1-(n.clientY-t.top)/t.height,u=h.uniforms.uMouse.value;u[0]=o,u[1]=i}function y(n){if(n.touches.length>0){const t=n.touches[0],o=e.getBoundingClientRect(),i=(t.clientX-o.left)/o.width,u=1-(t.clientY-o.top)/o.height,a=h.uniforms.uMouse.value;a[0]=i,a[1]=u}}let C;return window.addEventListener("resize",p),p(),f&&(e.addEventListener("mousemove",w),e.addEventListener("touchmove",y)),C=requestAnimationFrame(function e(n){C=requestAnimationFrame(e),h.uniforms.uTime.value=.001*n*t,o.render({scene:g})}),e.appendChild(l.canvas),()=>{var n;cancelAnimationFrame(C),window.removeEventListener("resize",p),f&&(e.removeEventListener("mousemove",w),e.removeEventListener("touchmove",y)),l.canvas.parentElement&&l.canvas.parentElement.removeChild(l.canvas),null===(n=l.getExtension("WEBGL_lose_context"))||void 0===n||n.loseContext()}},[n,t,u,v,c,f]),(0,l.jsx)("div",{ref:d,className:"w-full h-full",...m})}}}]);
//# sourceMappingURL=591.d24f246b.chunk.js.map