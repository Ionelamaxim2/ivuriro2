{"version":3,"file":"static/js/49.d879b7d8.chunk.js","mappings":"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","sources":["../node_modules/ogl/src/core/Texture.js","../node_modules/ogl/src/extras/Plane.js","../node_modules/ogl/src/core/Camera.js","components/CircularGallery.jsx"],"sourcesContent":["// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            wrapR = gl.CLAMP_TO_EDGE,\n            generateMipmaps = target === (gl.TEXTURE_2D || gl.TEXTURE_CUBE_MAP),\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == (gl.TEXTURE_2D || gl.TEXTURE_3D) ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n            length = 1,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.wrapR = wrapR;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.length = length;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.wrapR !== this.state.wrapR) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_R, this.wrapR);\n            this.state.wrapR = this.wrapR;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(this.target, this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropy);\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, this.level, this.internalFormat, this.format, this.type, this.image[i]);\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n                } else if (this.target === this.gl.TEXTURE_2D_ARRAY || this.target === this.gl.TEXTURE_3D) {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, this.image);\n                }\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(this.target, level, this.internalFormat, this.image[level].width, this.image[level].height, 0, this.image[level].data);\n                }\n            } else {\n                // Regular texture\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n                } else {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, this.image);\n                }\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n                } else {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, null);\n                }\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = numIndices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = /* @__PURE__ */ new Mat4();\nconst tempVec3a = /* @__PURE__ */ new Vec3();\nconst tempVec3b = /* @__PURE__ */ new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left || -1,\n        right = this.right || 1,\n        bottom = this.bottom || -1,\n        top = this.top || 1,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    updateProjectionMatrix() {\n        if (this.type === 'perspective') {\n            return this.perspective();\n        } else {\n            return this.orthographic();\n        }\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node, worldMatrix = node.worldMatrix) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(worldMatrix);\n\n        const radius = node.geometry.bounds.radius * worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","import {\n  Camera,\n  Mesh,\n  Plane,\n  Program,\n  Renderer,\n  Texture,\n  Transform,\n} from \"ogl\";\nimport { useRef, useEffect } from \"react\";\n\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait);\n  };\n}\n\nfunction lerp(p1, p2, t) {\n  return p1 + (p2 - p1) * t;\n}\n\nfunction autoBind(instance) {\n  const proto = Object.getPrototypeOf(instance);\n  Object.getOwnPropertyNames(proto).forEach((key) => {\n    if (key !== \"constructor\" && typeof instance[key] === \"function\") {\n      instance[key] = instance[key].bind(instance);\n    }\n  });\n}\n\nfunction createTextTexture(\n  gl,\n  text,\n  font = \"bold 30px monospace\",\n  color = \"black\"\n) {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  const textWidth = Math.ceil(metrics.width);\n  const textHeight = Math.ceil(parseInt(font, 10) * 1.2);\n  canvas.width = textWidth + 20;\n  canvas.height = textHeight + 20;\n  context.font = font;\n  context.fillStyle = color;\n  context.textBaseline = \"middle\";\n  context.textAlign = \"center\";\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  context.fillText(text, canvas.width / 2, canvas.height / 2);\n  const texture = new Texture(gl, { generateMipmaps: false });\n  texture.image = canvas;\n  return { texture, width: canvas.width, height: canvas.height };\n}\n\nclass Title {\n  constructor({\n    gl,\n    plane,\n    renderer,\n    text,\n    textColor = \"black\",\n    font = \"30px sans-serif\",\n  }) {\n    autoBind(this);\n    this.gl = gl;\n    this.plane = plane;\n    this.renderer = renderer;\n    this.text = text;\n    this.textColor = textColor;\n    this.font = font;\n    this.createMesh();\n  }\n  createMesh() {\n    const { texture, width, height } = createTextTexture(\n      this.gl,\n      this.text,\n      this.font,\n      this.textColor\n    );\n    const geometry = new Plane(this.gl);\n    const program = new Program(this.gl, {\n      vertex: `\n        attribute vec3 position;\n        attribute vec2 uv;\n        uniform mat4 modelViewMatrix;\n        uniform mat4 projectionMatrix;\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      `,\n      fragment: `\n        precision highp float;\n        uniform sampler2D tMap;\n        varying vec2 vUv;\n        void main() {\n          vec4 color = texture2D(tMap, vUv);\n          if (color.a < 0.1) discard;\n          gl_FragColor = color;\n        }\n      `,\n      uniforms: { tMap: { value: texture } },\n      transparent: true,\n    });\n    this.mesh = new Mesh(this.gl, { geometry, program });\n    const aspect = width / height;\n    const textHeight = this.plane.scale.y * 0.15;\n    const textWidth = textHeight * aspect;\n    this.mesh.scale.set(textWidth, textHeight, 1);\n    this.mesh.position.y = -this.plane.scale.y * 0.5 - textHeight * 0.5 - 0.05;\n    this.mesh.setParent(this.plane);\n  }\n}\n\nclass Media {\n  constructor({\n    geometry,\n    gl,\n    image,\n    index,\n    length,\n    renderer,\n    scene,\n    screen,\n    text,\n    viewport,\n    bend,\n    textColor,\n    borderRadius = 0.16,\n    font,\n  }) {\n    this.extra = 0;\n    this.geometry = geometry;\n    this.gl = gl;\n    this.image = image;\n    this.index = index;\n    this.length = length;\n    this.renderer = renderer;\n    this.scene = scene;\n    this.screen = screen;\n    this.text = text;\n    this.viewport = viewport;\n    this.bend = bend;\n    this.textColor = textColor;\n    this.borderRadius = borderRadius;\n    this.font = font;\n    this.createShader();\n    this.createMesh();\n    this.createTitle();\n    this.onResize();\n  }\n  createShader() {\n    const texture = new Texture(this.gl, { generateMipmaps: false });\n    this.program = new Program(this.gl, {\n      depthTest: false,\n      depthWrite: false,\n      vertex: `\n        precision highp float;\n        attribute vec3 position;\n        attribute vec2 uv;\n        uniform mat4 modelViewMatrix;\n        uniform mat4 projectionMatrix;\n        uniform float uTime;\n        uniform float uSpeed;\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          vec3 p = position;\n          // Eliminăm fluturarea pentru imagini statice:\n          // p.z = (sin(p.x * 4.0 + uTime) * 1.5 + cos(p.y * 2.0 + uTime) * 1.5) * (0.1 + uSpeed * 0.5);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\n        }\n      `,\n      fragment: `\n        precision highp float;\n        uniform vec2 uImageSizes;\n        uniform vec2 uPlaneSizes;\n        uniform sampler2D tMap;\n        uniform float uBorderRadius;\n        varying vec2 vUv;\n        \n        float roundedBoxSDF(vec2 p, vec2 b, float r) {\n          vec2 d = abs(p) - b;\n          return length(max(d, vec2(0.0))) + min(max(d.x, d.y), 0.0) - r;\n        }\n        \n        void main() {\n          vec2 ratio = vec2(\n            min((uPlaneSizes.x / uPlaneSizes.y) / (uImageSizes.x / uImageSizes.y), 1.0),\n            min((uPlaneSizes.y / uPlaneSizes.x) / (uImageSizes.y / uImageSizes.x), 1.0)\n          );\n          vec2 uv = vec2(\n            vUv.x * ratio.x + (1.0 - ratio.x) * 0.5,\n            vUv.y * ratio.y + (1.0 - ratio.y) * 0.5\n          );\n          vec4 color = texture2D(tMap, uv);\n          \n          float d = roundedBoxSDF(vUv - 0.5, vec2(0.5 - uBorderRadius), uBorderRadius);\n          if(d > 0.0) {\n            discard;\n          }\n          \n          gl_FragColor = vec4(color.rgb, 1.0);\n        }\n      `,\n      uniforms: {\n        tMap: { value: texture },\n        uPlaneSizes: { value: [0, 0] },\n        uImageSizes: { value: [0, 0] },\n        uSpeed: { value: 0 },\n        uTime: { value: 100 * Math.random() },\n        uBorderRadius: { value: this.borderRadius },\n      },\n      transparent: true,\n    });\n    const img = new Image();\n    img.src = this.image;\n    img.onload = () => {\n      texture.image = img;\n      this.program.uniforms.uImageSizes.value = [\n        img.naturalWidth,\n        img.naturalHeight,\n      ];\n    };\n  }\n  createMesh() {\n    this.plane = new Mesh(this.gl, {\n      geometry: this.geometry,\n      program: this.program,\n    });\n    this.plane.setParent(this.scene);\n  }\n  createTitle() {\n    this.title = new Title({\n      gl: this.gl,\n      plane: this.plane,\n      renderer: this.renderer,\n      text: this.text,\n      textColor: this.textColor,\n      fontFamily: this.font,\n    });\n  }\n  update(scroll, direction) {\n    this.plane.position.x = this.x - scroll.current - this.extra;\n\n    const x = this.plane.position.x;\n    const H = this.viewport.width / 2;\n\n    if (this.bend === 0) {\n      this.plane.position.y = 0;\n      this.plane.rotation.z = 0;\n    } else {\n      const B_abs = Math.abs(this.bend);\n      const R = (H * H + B_abs * B_abs) / (2 * B_abs);\n      const effectiveX = Math.min(Math.abs(x), H);\n\n      const arc = R - Math.sqrt(R * R - effectiveX * effectiveX);\n      if (this.bend > 0) {\n        this.plane.position.y = -arc;\n        this.plane.rotation.z = -Math.sign(x) * Math.asin(effectiveX / R);\n      } else {\n        this.plane.position.y = arc;\n        this.plane.rotation.z = Math.sign(x) * Math.asin(effectiveX / R);\n      }\n    }\n\n    this.speed = scroll.current - scroll.last;\n    this.program.uniforms.uTime.value += 0.04;\n    this.program.uniforms.uSpeed.value = this.speed;\n\n    const planeOffset = this.plane.scale.x / 2;\n    const viewportOffset = this.viewport.width / 2;\n    this.isBefore = this.plane.position.x + planeOffset < -viewportOffset;\n    this.isAfter = this.plane.position.x - planeOffset > viewportOffset;\n    if (direction === \"right\" && this.isBefore) {\n      this.extra -= this.widthTotal;\n      this.isBefore = this.isAfter = false;\n    }\n    if (direction === \"left\" && this.isAfter) {\n      this.extra += this.widthTotal;\n      this.isBefore = this.isAfter = false;\n    }\n  }\n  onResize({ screen, viewport } = {}) {\n    if (screen) this.screen = screen;\n    if (viewport) {\n      this.viewport = viewport;\n      if (this.plane.program.uniforms.uViewportSizes) {\n        this.plane.program.uniforms.uViewportSizes.value = [\n          this.viewport.width,\n          this.viewport.height,\n        ];\n      }\n    }\n    this.scale = this.screen.height / 2000;\n    this.plane.scale.y =\n      (this.viewport.height * (900 * this.scale)) / this.screen.height;\n    this.plane.scale.x =\n      (this.viewport.width * (1300 * this.scale)) / this.screen.width;\n    this.plane.program.uniforms.uPlaneSizes.value = [\n      this.plane.scale.x,\n      this.plane.scale.y,\n    ];\n    this.padding = 5;\n    this.width = this.plane.scale.x + this.padding;\n    this.widthTotal = this.width * this.length;\n    this.x = this.width * this.index;\n  }\n}\n\nclass App {\n  constructor(\n    container,\n    {\n      items,\n      bend = 0,\n      textColor = \"black\",\n      borderRadius = 0.16,\n      font = \"bold 30px Figtree\",\n      scrollSpeed = 1,\n      scrollEase = 0.05,\n    } = {}\n  ) {\n    document.documentElement.classList.remove(\"no-js\");\n    this.container = container;\n    this.scrollSpeed = scrollSpeed;\n    this.scroll = { ease: scrollEase, current: 0, target: 0, last: 0 };\n    this.onCheckDebounce = debounce(this.onCheck, 200);\n    this.createRenderer();\n    this.createCamera();\n    this.createScene();\n    this.onResize();\n    this.createGeometry();\n    this.createMedias(items, bend, textColor, borderRadius, font);\n    this.update();\n    this.addEventListeners();\n  }\n  createRenderer() {\n    this.renderer = new Renderer({ alpha: true });\n    this.gl = this.renderer.gl;\n    this.gl.clearColor(0, 0, 0, 0);\n    this.container.appendChild(this.gl.canvas);\n  }\n  createCamera() {\n    this.camera = new Camera(this.gl);\n    this.camera.fov = 45;\n    this.camera.position.z = 20;\n  }\n  createScene() {\n    this.scene = new Transform();\n  }\n  createGeometry() {\n    this.planeGeometry = new Plane(this.gl, {\n      heightSegments: 50,\n      widthSegments: 100,\n    });\n  }\n  createMedias(items, bend = 0, textColor, borderRadius, font) {\n    const defaultItems = [\n      {\n        image: \"/images/abdomen1.webp\",\n        text: \"Abdomen shape restoration\",\n      },\n      {\n        image: \"/images/buze1.webp\",\n        text: \"Visible volume and hydration after injection\",\n      },\n      {\n        image: \"/images/bbl1.webp\",\n        text: \"Brazilian Butt Lift\",\n      },\n      {\n        image: \"/images/fund1.webp\",\n        text: \"Non-surgical lifting and volumization\",\n      },\n      {\n        image: \"/images/sani1.webp\",\n        text: \"Improved shape, volume, and symmetry\",\n      },\n      {\n        image: \"/images/jawline1.webp\",\n        text: \"Defined jawline contour\",\n      },\n    ];\n    const galleryItems = items && items.length ? items : defaultItems;\n    this.mediasImages = galleryItems.concat(galleryItems);\n    this.medias = this.mediasImages.map((data, index) => {\n      return new Media({\n        geometry: this.planeGeometry,\n        gl: this.gl,\n        image: data.image,\n        index,\n        length: this.mediasImages.length,\n        renderer: this.renderer,\n        scene: this.scene,\n        screen: this.screen,\n        text: data.text,\n        viewport: this.viewport,\n        bend,\n        textColor,\n        borderRadius,\n        font,\n      });\n    });\n  }\n  onTouchDown(e) {\n    this.isDown = true;\n    this.scroll.position = this.scroll.current;\n    this.start = e.touches ? e.touches[0].clientX : e.clientX;\n  }\n  onTouchMove(e) {\n    if (!this.isDown) return;\n    const x = e.touches ? e.touches[0].clientX : e.clientX;\n    const distance = (this.start - x) * (this.scrollSpeed * 0.025);\n    this.scroll.target = this.scroll.position + distance;\n  }\n  onTouchUp() {\n    this.isDown = false;\n    this.onCheck();\n  }\n  onWheel(e) {\n    const delta = e.deltaY || e.wheelDelta || e.detail;\n    this.scroll.target += delta > 0 ? this.scrollSpeed : -this.scrollSpeed;\n    this.onCheckDebounce();\n  }\n  onCheck() {\n    if (!this.medias || !this.medias[0]) return;\n    const width = this.medias[0].width;\n    const itemIndex = Math.round(Math.abs(this.scroll.target) / width);\n    const item = width * itemIndex;\n    this.scroll.target = this.scroll.target < 0 ? -item : item;\n  }\n  onResize() {\n    this.screen = {\n      width: this.container.clientWidth,\n      height: this.container.clientHeight,\n    };\n    this.renderer.setSize(this.screen.width, this.screen.height);\n    this.camera.perspective({\n      aspect: this.screen.width / this.screen.height,\n    });\n    const fov = (this.camera.fov * Math.PI) / 180;\n    const height = 2 * Math.tan(fov / 2) * this.camera.position.z;\n    const width = height * this.camera.aspect;\n    this.viewport = { width, height };\n    if (this.medias) {\n      this.medias.forEach((media) =>\n        media.onResize({ screen: this.screen, viewport: this.viewport })\n      );\n    }\n  }\n  update() {\n    this.scroll.current = lerp(\n      this.scroll.current,\n      this.scroll.target,\n      this.scroll.ease\n    );\n    const direction = this.scroll.current > this.scroll.last ? \"right\" : \"left\";\n    if (this.medias) {\n      this.medias.forEach((media) => media.update(this.scroll, direction));\n    }\n    this.renderer.render({ scene: this.scene, camera: this.camera });\n    this.scroll.last = this.scroll.current;\n    this.raf = window.requestAnimationFrame(this.update.bind(this));\n  }\n  addEventListeners() {\n    this.boundOnResize = this.onResize.bind(this);\n    this.boundOnWheel = this.onWheel.bind(this);\n    this.boundOnTouchDown = this.onTouchDown.bind(this);\n    this.boundOnTouchMove = this.onTouchMove.bind(this);\n    this.boundOnTouchUp = this.onTouchUp.bind(this);\n    window.addEventListener(\"resize\", this.boundOnResize);\n    window.addEventListener(\"mousewheel\", this.boundOnWheel);\n    window.addEventListener(\"wheel\", this.boundOnWheel);\n    window.addEventListener(\"mousedown\", this.boundOnTouchDown);\n    window.addEventListener(\"mousemove\", this.boundOnTouchMove);\n    window.addEventListener(\"mouseup\", this.boundOnTouchUp);\n    window.addEventListener(\"touchstart\", this.boundOnTouchDown);\n    window.addEventListener(\"touchmove\", this.boundOnTouchMove);\n    window.addEventListener(\"touchend\", this.boundOnTouchUp);\n  }\n  destroy() {\n    window.cancelAnimationFrame(this.raf);\n    window.removeEventListener(\"resize\", this.boundOnResize);\n    window.removeEventListener(\"mousewheel\", this.boundOnWheel);\n    window.removeEventListener(\"wheel\", this.boundOnWheel);\n    window.removeEventListener(\"mousedown\", this.boundOnTouchDown);\n    window.removeEventListener(\"mousemove\", this.boundOnTouchMove);\n    window.removeEventListener(\"mouseup\", this.boundOnTouchUp);\n    window.removeEventListener(\"touchstart\", this.boundOnTouchDown);\n    window.removeEventListener(\"touchmove\", this.boundOnTouchMove);\n    window.removeEventListener(\"touchend\", this.boundOnTouchUp);\n    if (\n      this.renderer &&\n      this.renderer.gl &&\n      this.renderer.gl.canvas.parentNode\n    ) {\n      this.renderer.gl.canvas.parentNode.removeChild(this.renderer.gl.canvas);\n    }\n  }\n}\n\nexport default function CircularGallery({\n  items,\n  bend = 0,\n  textColor = \"black\",\n  borderRadius = 0.16,\n  font = \"bold 30px Figtree\",\n  scrollSpeed = 1.1,\n  scrollEase = 0.05,\n}) {\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const app = new App(containerRef.current, {\n      items,\n      bend,\n      textColor,\n      borderRadius,\n      font,\n      scrollSpeed,\n      scrollEase,\n    });\n    return () => {\n      app.destroy();\n    };\n  }, [items, bend, textColor, borderRadius, font, scrollSpeed, scrollEase]);\n  return (\n    <div\n      className=\"w-full h-full overflow-hidden cursor-grab active:cursor-grabbing\"\n      ref={containerRef}\n    />\n  );\n}\n"],"names":["emptyPixel","Uint8Array","isPowerOf2","value","ID","Texture","constructor","gl","image","target","TEXTURE_2D","type","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","wrapR","generateMipmaps","TEXTURE_CUBE_MAP","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","premultiplyAlpha","unpackAlignment","flipY","TEXTURE_3D","anisotropy","level","width","height","length","arguments","undefined","this","id","Math","min","renderer","parameters","maxAnisotropy","texture","createTexture","store","glState","state","REPEAT","bind","textureUnits","activeTextureUnit","bindTexture","update","textureUnit","needsUpdate","activeTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","texParameterf","getExtension","TEXTURE_MAX_ANISOTROPY_EXT","i","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","TEXTURE_2D_ARRAY","texImage3D","isCompressedTexture","compressedTexImage2D","data","isWebgl2","generateMipmap","onUpdate","Plane","Geometry","widthSegments","heightSegments","attributes","wSegs","hSegs","num","numIndices","position","Float32Array","normal","uv","index","Uint32Array","Uint16Array","buildPlane","Object","assign","size","super","depth","u","v","w","uDir","vDir","ii","io","segW","segH","iy","y","ix","x","a","b","c","d","tempMat4","Mat4","tempVec3a","Vec3","tempVec3b","Camera","Transform","near","far","fov","aspect","left","right","bottom","top","zoom","projectionMatrix","viewMatrix","projectionViewMatrix","worldPosition","orthographic","perspective","fromPerspective","PI","fromOrthogonal","updateMatrixWorld","inverse","worldMatrix","getTranslation","multiply","updateProjectionMatrix","lookAt","project","applyMatrix4","unproject","updateFrustum","frustum","m","set","constant","invLen","distance","frustumIntersectsMesh","node","geometry","bounds","radius","Infinity","computeBoundingSphere","center","copy","getMaxScaleOnAxis","frustumIntersectsSphere","plane","dot","Title","_ref","text","textColor","font","instance","proto","getPrototypeOf","getOwnPropertyNames","forEach","key","autoBind","createMesh","color","canvas","document","createElement","context","getContext","metrics","measureText","textWidth","ceil","textHeight","parseInt","fillStyle","textBaseline","textAlign","clearRect","fillText","createTextTexture","program","Program","vertex","fragment","uniforms","tMap","transparent","mesh","Mesh","scale","setParent","Media","_ref2","scene","screen","viewport","bend","borderRadius","extra","createShader","createTitle","onResize","depthTest","depthWrite","uPlaneSizes","uImageSizes","uSpeed","uTime","random","uBorderRadius","img","Image","src","onload","naturalWidth","naturalHeight","title","fontFamily","scroll","direction","current","H","rotation","z","B_abs","abs","R","effectiveX","arc","sqrt","sign","asin","speed","last","planeOffset","viewportOffset","isBefore","isAfter","widthTotal","uViewportSizes","padding","App","container","items","scrollSpeed","scrollEase","documentElement","classList","remove","ease","onCheckDebounce","func","wait","timeout","_len","args","Array","_key","clearTimeout","setTimeout","apply","debounce","onCheck","createRenderer","createCamera","createScene","createGeometry","createMedias","addEventListeners","Renderer","alpha","clearColor","appendChild","camera","planeGeometry","galleryItems","mediasImages","concat","medias","map","onTouchDown","e","isDown","start","touches","clientX","onTouchMove","onTouchUp","onWheel","delta","deltaY","wheelDelta","detail","item","round","clientWidth","clientHeight","setSize","tan","media","p1","p2","t","render","raf","window","requestAnimationFrame","boundOnResize","boundOnWheel","boundOnTouchDown","boundOnTouchMove","boundOnTouchUp","addEventListener","destroy","cancelAnimationFrame","removeEventListener","parentNode","removeChild","CircularGallery","_ref3","containerRef","useRef","useEffect","app","_jsx","className","ref"],"sourceRoot":""}